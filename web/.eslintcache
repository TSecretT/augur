[{"C:\\Users\\TSecret\\Documents\\GitHub\\faugur\\web\\src\\index.js":"1","C:\\Users\\TSecret\\Documents\\GitHub\\faugur\\web\\src\\App.js":"2","C:\\Users\\TSecret\\Documents\\GitHub\\faugur\\web\\src\\components\\Statistics.jsx":"3"},{"size":197,"mtime":1607844358170,"results":"4","hashOfConfig":"5"},{"size":144,"mtime":1607844635980,"results":"6","hashOfConfig":"5"},{"size":2789,"mtime":1607854791230,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"unirhs",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\TSecret\\Documents\\GitHub\\faugur\\web\\src\\index.js",[],["16","17"],"C:\\Users\\TSecret\\Documents\\GitHub\\faugur\\web\\src\\App.js",[],"C:\\Users\\TSecret\\Documents\\GitHub\\faugur\\web\\src\\components\\Statistics.jsx",["18","19"],"import React from 'react';\r\nimport '../App.css'\r\n\r\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { Statistic } from 'antd';\r\n\r\n\r\nimport data from '../db.json';\r\n\r\nconst Statistics = () => {\r\n    const [parsingTime, setParsingTime] = React.useState(); // [{match_number, time}]\r\n    const [averageParseTime, setAverageParseTime] = React.useState(); // Integer\r\n    const [checked, setChecked] = React.useState();\r\n    const [correct, setCorrect] = React.useState();\r\n    const [winrate, setWinrate] = React.useState();\r\n\r\n    const average = arr => (arr.reduce( ( p, c ) => p + c, 0 ) / arr.length).toFixed(2)\r\n\r\n    const processData = () => {\r\n        let parsing_time = []\r\n        let checking_time = []\r\n        let checked = 0;\r\n        let correct_predictions = 0\r\n        Object.keys(data).forEach((matchID, i) => {\r\n            let match = data[matchID];\r\n            if( data[matchID].parsing_time ) parsing_time.push({match_number: i+1, time: data[matchID].parsing_time})\r\n            if( data[matchID].prediction_correct ) correct_predictions++;\r\n            if( typeof match.prediction_correct !== \"undefined\" ) checked++;\r\n        })\r\n\r\n        setParsingTime(parsing_time);\r\n        setAverageParseTime(average(parsing_time.map(item => item.time)))\r\n        setChecked(checked);\r\n        setCorrect(correct_predictions);\r\n        setWinrate((correct_predictions/checked * 100).toFixed(2))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        processData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <span className=\"header\">Faugur Statistics</span>\r\n\r\n            <Statistic className=\"stats\" title=\"Total matches\" value={Object.keys(data).length} />\r\n            <Statistic className=\"stats\" title=\"Matches checked\" value={checked} />\r\n            <Statistic className=\"stats\" title=\"Predictions correct\" value={correct} />\r\n            <Statistic className=\"stats\" title=\"Prediction Rate\" value={winrate} />\r\n\r\n            <div className=\"chart\">\r\n                <Statistic className=\"stats\" title=\"Average parsing time\" value={averageParseTime} />\r\n                <ResponsiveContainer width=\"80%\" height={500}>\r\n                    <LineChart\r\n                        data={parsingTime}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"match_number\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"time\" stroke=\"#82ca9d\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics;",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":21,"column":13,"nodeType":"26","messageId":"27","endLine":21,"endColumn":26},{"ruleId":"28","severity":1,"message":"29","line":40,"column":8,"nodeType":"30","endLine":40,"endColumn":10,"suggestions":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'checking_time' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'processData'. Either include it or remove the dependency array.","ArrayExpression",["34"],"no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},"Update the dependencies array to be: [processData]",{"range":"37","text":"38"},[1546,1548],"[processData]"]